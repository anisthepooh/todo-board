{"ast":null,"code":"var _jsxFileName = \"/Users/casperanisimow/todo-board/src/Components/TodoList.js\";\nimport React from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport Form from './Form';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList(_ref) {\n  let {\n    todos,\n    setTodos\n  } = _ref;\n\n  const handleDragEnd = (result, destination, source) => {\n    const start = result.source.droppableId;\n    const finish = result.destination.droppableId; // Return card if it is dropped outside a column. \n\n    if (!result.destination) return; // Moves the cards whithin the sam column. \n\n    if (start === finish) {\n      const items = Array.from(todos);\n      const [reorderedItem] = items.splice(result.source.index, 1);\n      items.splice(result.destination.index, 0, reorderedItem);\n      setTodos(items);\n    }\n\n    const startTaskIds = Array.from(start.todos);\n    startTaskIds.splice(source.index, 1);\n    const newStart = { ...start,\n      todos: startTaskIds\n    };\n    const finishTaskIds = Array.from(finish.todos);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n    const newFinish = { ...finish,\n      todos: finishTaskIds\n    }; //TODO - move from one list to another -> first try: \n\n    if (result.destination.droppableId !== result.source.droppableId) {\n      const sourceClone = Array.from(source);\n      const destClone = Array.from(destination);\n      const [removed] = sourceClone.splice(sourceClone.index, 1);\n      console.log(removed);\n      destClone.splice(destClone.index, 0, removed);\n      const result = {};\n      result[result.source.droppableId] = sourceClone;\n      result[result.destination.droppableId] = destClone;\n      console.log(result.source.droppableId);\n      console.log(result.destination.droppableId);\n      setTodos(result);\n    }\n\n    ; // --\"\"-- \n\n    console.log(result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: [/*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"droppable-1\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-list-created\",\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(Todo, {\n            text: todo.text,\n            setTodos: setTodos,\n            todo: todo,\n            todos: todos,\n            index: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"droppable-2\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-list-created\",\n          ...provided.droppableProps,\n          ref: provided.innerRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","DragDropContext","Draggable","Droppable","Form","Todo","TodoList","todos","setTodos","handleDragEnd","result","destination","source","start","droppableId","finish","items","Array","from","reorderedItem","splice","index","startTaskIds","newStart","finishTaskIds","draggableId","newFinish","sourceClone","destClone","removed","console","log","provided","droppableProps","innerRef","map","todo","text"],"sources":["/Users/casperanisimow/todo-board/src/Components/TodoList.js"],"sourcesContent":["import React from 'react'\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\nimport Form from './Form';\n\nimport Todo from './Todo'\n\n\n\n\nfunction TodoList({ todos, setTodos }) {\n\n  \n  \n\n  const handleDragEnd = (result, destination, source) => {\n    const start = result.source.droppableId;\n    const finish = result.destination.droppableId;\n     \n    // Return card if it is dropped outside a column. \n    if(!result.destination) return;\n\n    // Moves the cards whithin the sam column. \n    if (start === finish) {\n      const items = Array.from(todos); \n      const [reorderedItem] = items.splice(result.source.index, 1); \n      items.splice(result.destination.index, 0, reorderedItem);\n  \n      setTodos(items);\n      }\n\n    const startTaskIds = Array.from(start.todos); \n    startTaskIds.splice(source.index, 1); \n    const newStart = {\n      ...start, \n      todos: startTaskIds,\n    }; \n\n    const finishTaskIds = Array.from(finish.todos);\n    finishTaskIds.splice(destination.index, 0, draggableId); \n    const newFinish ={\n      ...finish, \n      todos: finishTaskIds,\n    }; \n\n\n\n\n    //TODO - move from one list to another -> first try: \n    if(result.destination.droppableId !== result.source.droppableId ) {\n      const sourceClone = Array.from(source);\n      const destClone = Array.from(destination);\n      const [removed] = sourceClone.splice(sourceClone.index, 1);\n      console.log(removed);\n\n      destClone.splice(destClone.index, 0, removed);\n\n      const result = {};\n    result[result.source.droppableId] = sourceClone;\n    result[result.destination.droppableId] = destClone;\n\n    console.log(result.source.droppableId);\n    console.log(result.destination.droppableId);\n\n    setTodos(result);\n    };\n\n    // --\"\"-- \n\n    \n   \nconsole.log(result);\n  }\n\n  \n  return (\n\n    <div className='todo-container'>\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <Droppable droppableId='droppable-1'>\n          {(provided ) => (\n              <div className='todo-list-created' {...provided.droppableProps} ref={provided.innerRef} >\n                {todos.map((todo, index) => (\n                  \n                  <Todo \n                  text={todo.text}\n                  setTodos={setTodos}\n                  todo={todo}\n                  todos={todos}\n                  index={index}\n                  />\n                ))} \n              </div>\n          )} \n        </Droppable>\n        <Droppable droppableId='droppable-2'>\n          {(provided ) => (\n              <div className='todo-list-created' {...provided.droppableProps} ref={provided.innerRef} > \n              </div>\n          )} \n        </Droppable>\n      </DragDropContext> \n    </div> \n  )\n}\n\nexport default TodoList"],"mappings":"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"},"metadata":{},"sourceType":"module"}