{"ast":null,"code":"var _jsxFileName = \"/Users/casperanisimow/todo-board/src/Components/Lists.js\";\nimport React from 'react';\nimport Form from './Form';\nimport './Styling/List.css';\nimport Todo from './Todo';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Lists(todos, setTodos) {\n  const handleDragEnd = (result, destination, source) => {\n    const start = result.source.droppableId;\n    const finish = result.destination.droppableId; // Return card if it is dropped outside a column. \n\n    if (!result.destination) return; // Moves the cards whithin the sam column. \n\n    if (start === finish) {\n      const items = Array.from(todos);\n      const [reorderedItem] = items.splice(result.source.index, 1);\n      items.splice(result.destination.index, 0, reorderedItem);\n      setTodos(items);\n    } //TODO - move from one list to another -> first try: \n\n\n    if (result.destination.droppableId !== result.source.droppableId) {\n      const sourceClone = Array.from(source);\n      const destClone = Array.from(destination);\n      const [removed] = sourceClone.splice(sourceClone.index, 1);\n      console.log(removed);\n      destClone.splice(destClone.index, 0, removed);\n      const result = {};\n      result[result.source.droppableId] = sourceClone;\n      result[result.destination.droppableId] = destClone;\n      console.log(result.source.droppableId);\n      console.log(result.destination.droppableId);\n      setTodos(result);\n    }\n\n    ; // --\"\"-- \n\n    console.log(result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: [/*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"droppable-1\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-list-created\",\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(Todo, {\n            text: todo.text,\n            setTodos: setTodos,\n            todo: todo,\n            todos: todos,\n            index: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"droppable-2\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-list-created\",\n          ...provided.droppableProps,\n          ref: provided.innerRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Lists;\nexport default Lists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"names":["React","Form","Todo","DragDropContext","Draggable","Droppable","Lists","todos","setTodos","handleDragEnd","result","destination","source","start","droppableId","finish","items","Array","from","reorderedItem","splice","index","sourceClone","destClone","removed","console","log","provided","droppableProps","innerRef","map","todo","text"],"sources":["/Users/casperanisimow/todo-board/src/Components/Lists.js"],"sourcesContent":["import React from 'react'\nimport Form from './Form'\nimport './Styling/List.css'\nimport Todo from './Todo'\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\n\nfunction Lists(todos, setTodos) {\n\n  const handleDragEnd = (result, destination, source) => {\n    const start = result.source.droppableId;\n    const finish = result.destination.droppableId;\n     \n    // Return card if it is dropped outside a column. \n    if(!result.destination) return;\n\n    // Moves the cards whithin the sam column. \n    if (start === finish) {\n      const items = Array.from(todos); \n      const [reorderedItem] = items.splice(result.source.index, 1); \n      items.splice(result.destination.index, 0, reorderedItem);\n  \n      setTodos(items);\n      }\n\n\n\n\n    //TODO - move from one list to another -> first try: \n    if(result.destination.droppableId !== result.source.droppableId ) {\n      const sourceClone = Array.from(source);\n      const destClone = Array.from(destination);\n      const [removed] = sourceClone.splice(sourceClone.index, 1);\n      console.log(removed);\n\n      destClone.splice(destClone.index, 0, removed);\n\n      const result = {};\n    result[result.source.droppableId] = sourceClone;\n    result[result.destination.droppableId] = destClone;\n\n    console.log(result.source.droppableId);\n    console.log(result.destination.droppableId);\n\n    setTodos(result);\n    };\n\n    // --\"\"-- \n\n    \n   \nconsole.log(result);\n  }\n\n  return (\n    <div className='list'>\n        <DragDropContext onDragEnd={handleDragEnd}>\n        <Droppable droppableId='droppable-1'>\n          {(provided ) => (\n              <div className='todo-list-created' {...provided.droppableProps} ref={provided.innerRef} >\n                {todos.map((todo, index) => (\n                  \n                  <Todo \n                  text={todo.text}\n                  setTodos={setTodos}\n                  todo={todo}\n                  todos={todos}\n                  index={index}\n                  />\n                ))} \n              </div>\n          )} \n        </Droppable>\n        <Droppable droppableId='droppable-2'>\n          {(provided ) => (\n              <div className='todo-list-created' {...provided.droppableProps} ref={provided.innerRef} > \n              </div>\n          )} \n        </Droppable>\n      </DragDropContext>    \n        <div>\n            <Form />\n        </div>\n    </div>\n\n  )\n}\n\nexport default Lists"],"mappings":"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"},"metadata":{},"sourceType":"module"}